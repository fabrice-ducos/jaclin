(Building)
In this release java files are compiled everytime make is run.
In earlier releases, a java dependency system was used to
compile only the necessary files.

(Solaris)
running the jacl tests using the green threads java
interpreter with the jit on will crash the JVM.
This crash will happen even with the jit from the
jdk1.1.6 production release JIT.

tcljava/JavaDefineClassCmd.test
tcljava/JavaLoadCmd.test

to get around this you can disable the jit (-Djava.compiler=)
or use the native version (pass in the -native flag).

(Windows)
There is a very strange bug in the JDK1.1 series that causes
the exec command to fail on some NT machines. An example
from the test cases is an exec of java with some argument.
The exec command will report that "java" can not be found
even if it is in the users PATH. This problem has been
fixed in the JDK1.2 series but still haunts the JDK1.1 code.


(Windows)
compiling jacl with jikes (the IBM java compiler) and then
running jacl on a 1.1.6 sun VM with the jit on will crash the JVM.
Update:
This jit compiler bug has been fixed in Sun jdk1.1.7.


(Tcl Blend Windows)
Compiling under windows using the Tcl Blast 8.0.3 dist
requires tclRegExp.h because tclInt.h includes it.


(Tcl Blend Windows)
If, under Windows, you compile and install Tcl8.0.3 yourself instead 
of using the prebuilt binaries from Scriptics or the Tcl Blast CD,
then 'package require java' may fail to find the java package.
     
The problem is that if you install Tcl8.0.3 yourself, then the
Software\Scriptics\Tcl Registry key is not set, so auto_path is
not set to include the C:\Program Files\Tcl\lib directory, instead it
only includes C:\Program Files\Tcl\lib\tcl8.0.

If the Tcl Blend1.1 pkgIndex.tcl file is in 
C:\Program Files\Tcl\lib\tclblend1.1, then as a workaround, you
can append the parent directory to auto_path:
    lappend auto_path "C:/Program Files/Tcl/lib"
    package require java

Another workaround is to set the TCLLIBPATH environment variable to
C:\Program Files\Tcl\lib.

The problem stems from a bug in tcl8.0.3/library/init.tcl, and the bug
has been fixed in the CVS sources at Scriptics.


(Solaris Tcl Blend tests)
TclEvent-1.3 in tests/tcljava/TclEvent.test causes problems later
when exit is called.  If you run the TclEvent-1.3 test, then
when you later call the tcl exit command, you will get the following
message:
	called Tcl_Close on channel with refCount > 0 
This problem only seems to appear under Tcl8.0.3


(Solaris Jacl tests)
If you configure with --srcdir, and don't have write permission in
the source directory, then some of the Jacl tests in tcl/fileName.test
will fail.  Also, tcl/info.test will fail with a message
about 'cannot open file: gorp.info'

(Windows JDK1.2beta4 and JDK1.2fcs)
To use tclblend with JDK1.2beta4 or JDK1.2fcs, add the following to your path:
c:\jdk1.2beta4\bin;c:\jdk1.2beta4\jre\bin;c:\jdk1.2beta4\jre\bin\classic;c:\Program Files\Tcl\lib\tclblend1.1


(JDK1.2beta4 tests)
tests/tcljava/PkgInvoker.tcl fails.
The cause seems to be connected with the forName method in java.lang.Class
This JDK bug has been fixed in JDK1.2fcs.


(JDK1.2beta4 tests)
ReflectObject-3.1 fails when run after AmbiguousSignature


(JDK1.2beta4 Windows tests)
When running the tests under JDK1.2beta4 under NT4.0sp3, the TCLSH
makefile variable must not be an absolute pathname.  If it is
an absolute pathname, then tclsh80 will crash with a segfault


(Tcl Blend guiDemo)
Under Tcl Blend with Tcl 8.0.3, guiDemo sometimes does not work,
especially when run on a remote display over the network.
The problem is that employees cannot be moved over.
When the arrow is clicked on, the message:
	can't wait for variable "done":  would wait forever
appears


(Tcl 8.1)
src/native/javaInterp.c produces a warning while compiling because
Tcl_ObjSetVar2 is not defined in Tcl8.1.  package require java
fails because this symbol cannot be found.

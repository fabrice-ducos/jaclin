'\"
'\" Copyright (c) 1996-1998 Sun Microsystems, Inc.
'\"
'\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\" 
'\" RCS: @(#) $Id$
'\" 
.so man.macros
.TH TclIndex 3 1.0 Jacl "Jacl Library Procedures"
.BS
.SH CLASS
tcl.lang.TclIndex -- This class provides an efficient way to match a
string with a predefined array of strings.

.SH EXTENDS
tcl.lang.InternalRep

.SH METHODS
.sp
static int \fBget\fR(Interp \fIinterp\fR, TclObject \fItobj\fR, String \fItable[]\fR, String \fImsg\fR, int \fIflags\fR) throws TclException

.SH ARGUMENTS
.AS TclObject "table[]" .
.AP Interp interp
If an error occurs while converting \fItobj\fR to a string object,
an error message is left in the interpreter's result object
unless \fIinterp\fR is NULL.
.AP TclObject tobj
TclObject containing the String to compare to those of \fItable[]\fR.
If the internal representation of \fItobj\fR is not TclString, the
method attempts to convert it to TclString.
.AP String table[]
Table of strings to compare against the string internal to \fItobj\fR.
.AP String msg
If an error occurs, \fImsg\fR is included in the error message to
indicate what was being looked up.
.AP int flags
If TCL.EXACT flag is specified, only exact matches are accepted.
Otherwise, matches include unique abbreviations.
.BE

.SH DESCRIPTION
The \fBTclIndex\fR class provides an efficient way to look up
keywords, switch names, option names, and similar things where the
value of an object must be one of a predefined set of values.  We
commonly use this class to identify the subcommand or switch of a Tcl
command.
.TP
\fBget\fR
The \fBget\fR method compares the internal string value of \fItobj\fR
against each of the strings in \fItable\fR to find a match.  A match
occurs if \fItobj\fR's string value is identical to one of the strings
in \fItable\fR, or if it is a unique abbreviation for exactly one of
the strings in \fItable\fR and the TCL.EXACT \fIflag\fR was not
specified.
.sp
If a match is made, the index of the matching entry is returned, and
the internal representation of \fItobj\fR is modified to hold the
address of \fItable\fR and the index of the matching entry.  If
TclIndex.get() is invoked again with the same tobj and table arguments
(e.g. during a re-invocation of a Tcl command), it returns the
matching index immediately without having to redo the lookup
operation.
.sp
If there is no matching entry, a TclException is thrown, and an error
message is left in \fIinterp\fR's result if \fIinterp\fR isn't NULL.
The \fImsg\fR argument is included in the error message to indicate
what kind of data that was being looked up.

.SH EXAMPLE
.RS
Suppose the \fBfoo\fR command requires the use of one of
the options in the following array of strings:
.CS
static final private String opts[] = {
	"first",
	"second",
	"third"
};
.CE
When a call is made to \fBfoo\fR, we use the \fBget\fR method to find
out which option was specified in the first argument to the \fBfoo\fR
command,\fIargv[1]\fR:
.CS
int opt = TclIndex.get(interp, argv[1], opts, "option", 0);
.CE
If \fIargv[1]\fR's internal string representation is either "second",
"sec", or "s" a match is made.  However, if \fIargv[1]\fR's internal
string representation is "scd", no match is made, and the \fBget\fR
method generates the following error message:
.CS
bad option "scd": must be first, second, or third.
.CE
.RE

.SH "EQUIVALENT C FUNCTIONS"
Tcl_GetIndexFromObj

.SH "SEE ALSO"
InternalRep, TclObject, TclString, TclInteger, createCmd, TclException

.SH KEYWORDS
index, internal representation, object, object type, string, exception

'\"
'\" Copyright (c) 1996-1998 Sun Microsystems, Inc.
'\"
'\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\" 
'\" RCS: @(#) $Id$
'\" 
.so man.macros
.TH ReflectObject 3 1.0 Jacl "Jacl Library Procedures"
.BS
.SH CLASS
tcl.lang.ReflectObject -- This class is used to reference Java objects.

.SH EXTENDS
tcl.lang.InternalRep

.SH METHODS
.sp
static TclObject \fBnewInstance\fR(Object \fIjavaObj\fR)
.sp
static Object \fBget\fR(Interp \fIinterp\fR, TclObject \fItobj\fR)

.SH ARGUMENTS
.AS TclObject "javaObj" .
.AP Object javaObj
Java Object to wrap into a TclObject.
.AP Interp interp
If \fItobj\fR is not a valid TclObject, an error message is left in
the interpreter's result object unless \fIinterp\fR is NULL.
.AP TclObject tobj
TclObject from which to extract the Java Object.
.BE

.SH DESCRIPTION
.PP
This class is used to create and access arbitrary Java objects using
the Java Reflection API.  It wraps a Java object (i.e., an instance of
any Java class) in a handle and exposes the handle to Tcl scripts.
The object is registered inside the interpreter and is given a string
name. Tcl scripts can manipulate this object as long as the the
reference count of the object is greater than zero.
.TP
\fBnewInstance\fR
The \fBnewInstance\fR method creates an object handle to \fIjavaObj\fR.  The
object handle can later be used to access javaObj via the java::*
commands.  This method is normally used to pass Java object to Tcl
scripts.  For example, a command procedure can return an object handle
to Tcl scripts by executing the following:
.RS
.CS
Object obj_to_return;
interp.setResult(ReflectObject.newInstance(interp, obj_to_return));
.CE
The object handle returned by this method is only valid in the given
interpreter, \fIinterp\fR.
.RE
.TP
\fBget\fR
The \fBget\fR method returns the Java Object stored inside \fItobj\fR.
The \fItobj\fR argument must contain a valid object handle, otherwise
an error is reported.

.SH "SEE ALSO"
InternalRep, java, TclObject, TclList, TclString, TclInteger, TclBoolean, TclDouble

.SH KEYWORDS
reflect object, internal representation, object, object type

'\"
'\" Copyright (c) 1996-1998 Sun Microsystems, Inc.
'\"
'\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\" 
'\" RCS: @(#) $Id$
'\" 
.so man.macros
.TH TclList 3 1.0 Jacl "Jacl Library Procedures"
.BS
.SH CLASS
tcl.lang.TclList -- This class is used to create, modify and read from Tcl list
objects. 

.SH EXTENDS
tcl.lang.InternalRep

.SH METHODS
.sp
static TclObject \fBnewInstance\fR()
.sp
static void \fBappend\fR(Interp \fIinterp\fR, TclObject \fItobj\fR, TclObject \fIelem\fR)
throws TclException
.sp
static int \fBgetLength\fR(Interp \fIinterp\fR, TclObject \fItobj\fR)
throws TclException
.sp
static TclObject[ ] \fBgetElements\fR(Interp \fIinterp\fR, TclObject \fItobj\fR)
throws TclException
.sp
static TclObject \fBindex\fR(Interp \fIinterp\fR, TclObject \fItobj\fR, int \fIindex\fR)
throws TclException
.sp
static void \fBreplace\fR(Interp \fIinterp\fR, TclObject \fItobj\fR, int \fIindex\fR, int \fIcount\fR, TclObject \fIelts[]\fR, int \fIfrom\fR, int \fIto\fR)

.SH ARGUMENTS
.AS TclObject "elts[]" .
.AP Interp interp
If an error occurs while converting an object to be a list object,
an error message is left in the interpreter's result object
unless \fIinterp\fR is NULL.
.AP TclObject tobj
Points to the list object to be manipulated.
If \fItobj\fR does not already point to a list object,
an attempt will be made to convert it to one.
.AP TclObject elem
Points to a list object containing elements to be appended onto \fItobj\fR.
.AP TclObject elts[]
An array of TclObjects to reaplace those in the list object \fItobj\fR.
.AP int index
The index of the elemtent of \fItobj\fR in question.
.AP int count
The number of elemtents of the \fItobj\fR to replace.
.AP int from
The index of the first replacement element in \fIelts\fR.
.AP int to
The index of the last replacement element in \fIelts\fR.
.BE

.SH DESCRIPTION
.PP
The TclList class is used to create, modify and read from Tcl list
objects. All of the methods defined below attempt to change the
internal representation of \fItobj\fR parameters to TclList. If such a
conversion fails (e.g., the string value of \fItobj\fR is not a proper Tcl
list), a TclException is thrown, and an appropriate error message
is left in \fIinterp\fR's result if \fIinterp\fR is not null.
.PP
Tcl list objects have an internal representation that supports
the efficient indexing and appending.
The procedures described in this man page are used to
create, modify, index, and append to Tcl list objects from Java code.
In all cases where \fItobj\fR is an argument, if \fItobj\fR is not a
TclList, then an attempt is made to convert it to a TclList.  If
the attempt fails, a TclException is thrown.
.TP
\fBnewInstance\fR
The \fBnewInstance\fR method creates and returns a new empty TclList.
.TP
\fBappend\fR
The \fBappend\fR method adds one object, \fIelem\fR, to the end of the list
object referenced by \fItobj\fR.  After appending the element,
\fBappend\fR increments the element's reference count since \fItobj\fR
now also refers to it.
.TP
\fBgetLength\fR
The \fBgetLength\fR method returns the number of elements in \fItobj\fR.
.TP
\fBgetElements\fR
The \fBgetElements\fR method converts the TclList \fItobj\fR to an array of
TclObjects.  The objects referenced by the returned array should be
treated as readonly, and their ref counts are not incremented.
.TP
\fBindex\fR
The \fBindex\fR method returns a pointer to the \fIindex\fRth element of
\fItobj\fR.  If \fIindex\fR is negative or greater than or equal to
the number of elements in the list, null is returned.
.TP
\fBreplace\fR
The \fBreplace\fR mehtod replaces zero or more elements of the list referenced by
\fItobj\fR with the objects in \fIelts\fR ranging from \fIfrom\fR to
\fIto\fR.

.SH "EQUIVALENT C FUNCTIONS"
Tcl_NewListObj, Tcl_ListObjAppendList, Tcl_ListObjLength,
Tcl_ListObjGetElements, Tcl_ListObjIndex, Tcl_ListObjReplace

.SH "SEE ALSO"
InternalRep, TclObject, TclIndex, TclDouble, TclString, TclInteger, TclBoolean, ReflectObject

.SH KEYWORDS
append, index, insert, internal representation, length, list, list object, list type, object, object type, replace

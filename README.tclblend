Tcl Blend

RCS: @(#) $Id: README.tclblend,v 1.15 2005/07/15 03:57:00 mdejong Exp $

1. Introduction
---------------

Tcl Blend provides two new capabilities to Tcl. First, Tcl Blend
provides Java classes that expose key pieces of the interfaces that
are available to extension writers who currently use C. Using these
classes, extension writers can create new commands for the Tcl
interpreter. In addition, Tcl Blend provides commands that allow
script writers to directly manipulate Java objects without having
to write any Java code. The reflection classes in Java make it
possible to invoke methods and access fields on arbitrary Java
objects. Tcl Blend takes advantage of these capabilities to provide
a dynamic interface to Java.

2. Documentation
----------------

The Tcl/Java project website includes a getting started page that
provides a good intro to interacting with Java from Tcl. The website
can be viewed locally by opening docs/website/index.html in a web
browser, or online at the following URL:

http://tcljava.sourceforge.net

One can also find demos included in this release that provide
examples of how to integrate Tcl and Java. The manual page
at docs/website/manual.html provides a useful API reference.
The "new_features.txt" file describes features that have been
added in each release.

3. Requirements
---------------

The Java Development Kit 1.1 or greater are required to use Tcl Blend.

To build Tcl Blend on Solaris the Native Threads Pack, and 
several patches, must be installed on top of the JDK.  The 
package, necessary patches, and installation instructions can 
be found at http://java.sun.com/j2se/1.4/index.html.

Tcl Blend will build and run under JDK1.2 and newer, see
known_issues.txt for a list of problems and bugs.

Tcl 8.4.11 is the most recent Tcl release tested with Tcl Blend.
Unix users can build with Tcl 8.3 (8.3.2 or greater) or
Tcl 8.4 (8.4.4 or greater). Windows users will need to
build with Tcl 8.4.4 or greater. The Thread extension
version 2.6.2 or greater is also required. Each of these
downloads can be found at the following URL.

http://sourceforge.net/project/showfiles.php?group_id=10894


4. Installation
---------------

A unified build system that works under both Unix and Windows
is used to build Tcl Blend. One will first need to build
the Tcl and Thread packages. Unix users should just need
to run the configure scripts. Windows users will need
to download the msys_mingw package before building. The
msys_mingw download provides a minimal set of tools needed
to build native Win32 applications. See the README.TXT file
for info about starting the msys shell.

http://sourceforge.net/project/showfiles.php?group_id=10894

See the Tcl win/README file for more information about how
to install and build Tcl and the Thread package with msys_mingw.
Both Tcl and the Threads package must be built as shared
libraries (enabled by default) and with threads enabled
(pass --enable-threads to configure).

To run the configure script, just type ./configure in the
toplevel directory. This runs a configuration script created
by GNU autoconf, which configures Tcl Blend for your system and
creates a Makefile. The configure script allows you to customize
the Tcl Blend configuration for your site; for details on how you can
do this, type "./configure --help" or refer to the autoconf
documentation (not included here). The most commonly used
arguments to the configure script are as follows:

	--prefix=DIR		By default, the configure script will
                                assume that you want to install into
                                /usr/local. Under Windows, the /usr/local
                                directory is mapped to a Windows path
                                based on where you installed mingw_msys.
				One can specify a specific install
                                directory by passing the directory name
                                as an argument to the prefix option.
                                For example, --prefix=/opt/jacl or
                                or --prefix=D:/jacl under Windows.

	--with-tcl=DIR		Pass the absolute unix path name of the
				directory where Tcl has been build
				as the value of DIR.

	--with-thread=DIR	Pass the absolute unix path name of the
				directory where the Tcl thread
				extension has been build as the
				value of DIR.

	--with-jdk=DIR		By default, the configure script will
                                attempt to find the JDK by searching on
                                the PATH for the javac program. If the
                                javac program can not be found on the
                                PATH or if you do not want to use the
				JDK that it finds, you will need to use
                                this switch to tell configure where
                                it should look for the JDK binaries.

	--with-jikes=PROG	The JDK ships with a java compiler called
				javac. This compiler works but it is very
				slow. Many people would rather use the
				jikes compiler from IBM because it is much
				faster than javac and it produces better code.
				On my system, a compile with javac takes
				1 minute while a compile with jikes
                                takes less than 3 seconds. If this switch is
                                given with no PROG argument then the configure
                                script will search for jikes on the PATH.
                                If a PROG argument is provided it must be the
                                absolute path name of your jikes executable.
                                See www.research.ibm.com/jikes for more info.

Running the configure script will generate a Makefile, assuming that
no errors occurred during the configure process. You should now
type "make", this will create two library files called tclblend.jar and
tcljava.jar. The tclblend.jar library file stores the class files that
are only used by Tcl Blend. The tcljava.jar library file stores the class
files that are shared between jacl and tclblend. Make will also create
a Tcl Blend shared library, libtclblend.so under UNIX or tclblend.dll
under Windows.

After the make finishes you can quickly test out Tcl Blend by typing
"make shell" which will drop you into a running Tcl Blend shell where
you can type in commands. Type "package require java" in the shell
to load the Tcl Blend shared library. You can also run the regression
tests by typing "make test". See tests/README for more information
about the regression test suite.

When you are ready to install type "make install" to install
the Tcl Blend libraries on your system. Doing the install will
also create a pair of wrapper scripts called jtclsh and jwish
which you can use to run Tcl Blend without setting lots of
environmental variables by hand. After the wrapper script has
been installed a test program will be run to ensure that
the installed program is working correctly. Do not try to run
the wrapper scripts from the build directory, they need to
be installed before they will run. Under Windows, a jtclsh.bat
will also be installed. This batch file can be used to start
Tcl Blend from the Windows explorer or the cmd shell.

5. License Agreement
---------------------

See the file "license.terms" for information on usage and 
redistribution of this file, and for a DISCLAIMER OF ALL WARRANTIES.

6. Getting Help
----------------

Users of Tcl Blend or Jacl should subscribe and post questions
to the tcljava-user mailing list at SourceForge. This mailing
list provides a forum to ask questions or post scripts that are
causing you trouble. Basically, any Jacl or Tcl Blend related
question is on topic for this mailing list.

http://lists.sourceforge.net/lists/listinfo/tcljava-user

There is also a mailing list for Jacl and Tcl Blend developers.
If you have a specific question about some implementation feature,
have a patch for Jacl or Tcl Blend, or are interested in implementing
some feature, then you should post a note to the developers
mailing list.

http://lists.sourceforge.net/lists/listinfo/tcljava-dev

Note that you will have to subscribe to the mailing lists before
posting to them. Some people think this subscription requirement
is somehow "unfriendly", but without it the mailing list would
be full of spam. It only takes a moment to subscribe and you
can unsubscribe at any time. Posts from users that are not subscribed
to the mailing list will be automatically rejected.

In addition to the mailing lists, you can ask about Jacl or Tcl Blend
or on the Tcl newsgroup. The network news group "comp.lang.tcl"
intended for the exchange of information about Tcl, Tk, and
related applications. It can also be useful to do a google groups
search on comp.lang.tcl for Jacl or Tcl Blend related questions.

When reporting bugs, please provide a short Tcl script that we can use
to reproduce the bug.  Make sure that the script runs with bare-bones
Tcl and doesn't depend on any extensions or other programs,
particularly those that exist only at your site.  Also, please include
these additional pieces of information with the script:
    (a) How do we use the script to make the problem happen (e.g.
	what things do we click on, in what order)?
    (b) What happens when you do these things (presumably this is
        undesirable)?
    (c) What did you expect to happen?
    (d) What platform are you running on (Machine, OS, etc.)?
    (e) What releases of Tcl products are you using?

7. Development History
----------------------

Tcl Blend 1.0 was released by the now defunct SunScript group at
Sun Labs. The majority of the Tcl Blend developers spun out of
Sun Labs into Scriptics.

Newer versions of Tcl Blend were developed primarily by people outside
of Scriptics, with some assistance from Scriptics.

The Jacl 1.0 & Tcl Blend 1.0 team at Sun Script
-----------------------------------------------
Ray Johnson - Project Manager
Melissa Hirschl
Ioi Lam
Bryan Surles
Special thanks to Scott Stanton who implemented Tcl Blend.

The Jacl 1.1 & Tcl Blend 1.1 team
---------------------------------
Mo DeJong (University of Minnesota)
Christopher Hylands (UC Berkeley)
John Reekie (UC Berkeley)
Bryan Surles (Scriptics)

The Jacl 1.2 & Tcl Blend 1.2 team
---------------------------------
Mo DeJong (University of Minnesota)
Scott Redman (Scriptics)

The Jacl 1.3 & Tcl Blend 1.3 team
---------------------------------
Mo DeJong (Cygnus / Red Hat)
Scott Redman (Scriptics)
Christian Krone (SQL Datenbanksysteme GmbH)

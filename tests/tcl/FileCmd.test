# FileCmd.test --
#
#	Tests the implementation of reading from a file.
#
# Copyright (c) 1999 by Moses DeJong
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# RCS: @(#) $Id: FileCmd.test,v 1.2 1999/05/24 15:28:06 mo Exp $

# Note: This test file must be sourced from the parent directory
#       or else the defs file may not be properly loaded.

if {[string compare test [info procs test]] == 1} then {source defs}

setupJavaPackage

# Write out a file of some length

proc writeZero { name len } {
    file delete -force $name
    set fd [open $name w]
    catch {fconfigure stdout -buffering full -translation binary}

    for {set i 0} {$i < $len} {incr i} {
	puts -nonewline $fd 0
    }
    close $fd

    #check the size of the file
    if {[file size $name] != $len} {
	error "file size is [file size $name], it should have been $len"
    }
}

# These tests will check the implementation of the read command in Jacl and Tcl Blend

test FileCmd-1.1 {read all bytes from a file} {
  set fname zeros
  writeZero $fname 10
  set fd [open $fname r]
  set data [read $fd]
  close $fd
  string length $data
} 10

test FileCmd-1.2 {read bytes from a file} {
  set fname zeros
  writeZero $fname 10
  set fd [open $fname r]
  set data [read $fd 10]
  close $fd
  string length $data
} 10

test FileCmd-1.3 {read all data in one line} {
  set fname zeros
  #buffer size is set in the source code, if change there then these test need changing
  writeZero $fname 10
  set fd [open $fname r]
  set numbytes [gets $fd data]
  close $fd
  list \
  [string length $data] \
  $numbytes
} {10 10}

test FileCmd-1.4 {read size bigger that buffer size in source code} {
  set fname zeros
  #buffer size is set in the source code, if change there then these test need changing
  writeZero $fname 1025
  set fd [open $fname r]
  set data [read $fd]
  close $fd
  string length $data
} 1025

test FileCmd-1.5 {read size bigger that buffer size in source code} {
  set fname zeros
  #buffer size is set in the source code, if change there then these test need changing
  writeZero $fname 1025
  set fd [open $fname r]
  set data [read $fd 1025]
  close $fd
 string length $data
} 1025

test FileCmd-1.6 {read size bigger that buffer size in source code} {
  set fname zeros
  #buffer size is set in the source code, if change there then these test need changing
  writeZero $fname 1025
  set fd [open $fname r]
  set numbytes [gets $fd data]
  close $fd
  list \
  [string length $data] \
  $numbytes
} {1025 1025}

test FileCmd-1.7 {read size bigger than that buffer size in source code} {
  set fname zeros
  #buffer size is set in the source code, if change there then these test need changing
  writeZero $fname 2000
  set fd [open $fname r]
  set data [read $fd]
  close $fd
  string length $data
} 2000

test FileCmd-1.8 {read size bigger than that buffer size in source code} {
  set fname zeros
  #buffer size is set in the source code, if change there then these test need changing
  writeZero $fname 2000
  set fd [open $fname r]
  set data [read $fd]
  close $fd
  string length $data
} 2000

test FileCmd-1.9 {read size bigger than that buffer size in source code} {
  set fname zeros
  #buffer size is set in the source code, if change there then these test need changing
  writeZero $fname 2000
  set fd [open $fname r]
  set numbytes [gets $fd data]
  close $fd
  list \
  [string length $data] \
  $numbytes
} {2000 2000}

test FileCmd-1.10 {read more bytes than the file size} {
  set fname zeros
  #buffer size is set in the source code, if change there then these test need changing
  writeZero $fname 2000
  set fd [open $fname r]
  set data [read $fd 3000]
  close $fd
  string length $data
} 2000


file delete -force zeros

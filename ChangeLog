2001-12-25  Mo DeJong  <mdejong@users.sourceforge.net>

	* src/jacl/tcl/lang/Channel.java (read, write,
	flush, checkRead, checkWrite): Implement and use
	new helper methods that check to see if reading
	or writing is allowed on a Channel. The old logic
	was incorrect in the case of a server socket which
	is neither readable nor writeable.
	* src/jacl/tcl/lang/FconfigureCmd.java (cmdProc):
	Handle server socket case which is neither readable
	not writeable the same as standard Tcl.
	* src/jacl/tcl/lang/FileChannel.java (write, flush):
	Call new checkWrite method instead of invoking
	super class method to check the writable property.

2001-12-24  Bruce Johnson  <bruce_johnson@merck.com>,
            Mo DeJong  <mdejong@users.sourceforge.net>

	* src/jacl/tcl/lang/Channel.java (getInputEofChar,
	setInputEofChar, getOutputEofChar, setOutputEofChar):
	Add methods to query and set the input and
	output new eof state fields. These fields are not
	actually used yet.
	* src/jacl/tcl/lang/FconfigureCmd.java (cmdProc): Add
	support for getting and setting -eofchar on a channel.

2001-12-23  Mo DeJong  <mdejong@users.sourceforge.net>

	* src/jacl/tcl/lang/FconfigureCmd.java (cmdProc):
	Use new getBufferingString and getBufferingID
	methods from the TclIO class.
	* src/jacl/tcl/lang/TclIO.java (getBufferingString,
	getBufferingID): Add helper methods to simplify
	the code in the fconfigure command.

2001-12-23  Bruce Johnson  <bruce_johnson@merck.com>,
            Mo DeJong  <mdejong@users.sourceforge.net>

	* src/jacl/tcl/lang/Channel.java (getInputTranslation,
	setInputTranslation, getOutputTranslation, setOutputTranslation):
	Add new input and output translations fields and accessors.
	These fields are not actually used yet.
	* src/jacl/tcl/lang/FconfigureCmd.java (cmdProc): Implement
	the -translation option for the fconfigure command.
	* src/jacl/tcl/lang/TclIO.java (getTranslationString,
	getTranslationID): Add new methods and fields to support
	the -translation option for fconfigure.

2001-12-23  Mo DeJong  <mdejong@users.sourceforge.net>

	* src/jacl/tcl/lang/Channel.java (getMode, isReadOnly,
	isWriteOnly, isReadWrite): Add new methods to check mode
	status without having to deal with TclIO flags directly.
  	Use these new methods throughout the class. Remove
	the getMode method.
	* src/jacl/tcl/lang/FileChannel.java: Rename input
	parameter mode to inmode to avoid possible confusion
	with inherited mode field.

2001-11-27  Bruce Johnson  <bruce_johnson@merck.com>,
            Mo DeJong  <mdejong@users.sourceforge.net>

	* src/jacl/tcl/lang/Channel.java (buffering, getBuffering,
	setBuffering, BUF_SIZE, bufferSize, getBufferSize,
	setBufferSize, encoding, getEncoding, setEncoding): Add
	new members and get/set methods.
	* src/jacl/tcl/lang/FconfigureCmd.java (cmdProc):
	Get and set channel values for -buffering, -buffersize,
	and -encoding options.
	* src/jacl/tcl/lang/TclIO.java (BUFF_FULL, BUFF_LINE,
	BUFF_NONE): Add new fields for use in Channel code.

2001-11-27  Bruce Johnson  <bruce_johnson@merck.com>,
            Mo DeJong  <mdejong@users.sourceforge.net>

	* src/jacl/tcl/lang/Channel.java (blocking, getBlocking,
	setBlocking): Add new blocking state.
	* src/jacl/tcl/lang/FconfigureCmd.java (cmdProc): Indent
	to 4 space Tcl style. Add -blocking channel option.
	Remove the "fconfigure command not implemented yet" error.

2001-11-21  Mo DeJong  <mdejong@users.sourceforge.net>

	* src/tcljava/tcl/lang/TclPosixException.java
	(TclPosixException): Return posix errors in upper
	case to match Tcl implementation.

2001-11-20  Mo DeJong  <mdejong@users.sourceforge.net>

	* src/jacl/tcl/lang/SocketCmd.java (cmdProc): Use the
	Util.getInt() method to parse socket port numbers so
	that we are compatible with Tcl error messages.
	Avoid wrapping code in try blocks that catch Exception.
	Set the interpreter result to String directly
	instead of creating a TclString inline.

2001-11-20  Mo DeJong  <mdejong@users.sourceforge.net>

	* src/jacl/tcl/lang/StdChannel.java (open): Set
	channel names to stdin, stdout, and stderr instead
	of file0, file1, and file2.
	* src/jacl/tcl/lang/TclIO.java (getChannel,
	getNextDescriptor): Remove aliases for stdin, stdout,
	and stderr. When getting a descriptor prefixed with
	"file" but sure the first one we return is "file3".

2001-11-20  Mo DeJong  <mdejong@users.sourceforge.net>

	* src/jacl/tcl/lang/PutsCmd.java:
	* src/jacl/tcl/lang/ReadCmd.java: Reformat comments
	to make use Java style // instead of C style /**/.

2001-11-20  Mo DeJong  <mdejong@users.sourceforge.net>

	* src/jacl/tcl/lang/Channel.java (write): Remove
	trailing "." from error message since it is not
	compatible with Tcl error message.
	* src/jacl/tcl/lang/FblockedCmd.java (cmdProc):
	* src/jacl/tcl/lang/GetsCmd.java (cmdProc):
	* src/jacl/tcl/lang/PutsCmd.java (cmdProc):
	* src/jacl/tcl/lang/ReadCmd.java (cmdProc):
	Remove mode check that belongs in Channel methods.

2001-11-20  Mo DeJong  <mdejong@users.sourceforge.net>

	* src/jacl/tcl/lang/ServerSocketChannel.java (errorMsg)
	Remove unused errorMsg member.
	* src/jacl/tcl/lang/SocketChannel.java (SocketChannel,
	close): Set channel mode to TclIO.RDWR to indicate that
	reading and writing are allowed on socket. Set errorMsg
	member if an exception was raised during close.
	* src/jacl/tcl/lang/SocketCmd.java (cmdProc): Create
	SocketChannel with TclIO.RDWR mode to indicate that
	reading and writing are allowed on socket.

2001-11-20  Mo DeJong  <mdejong@users.sourceforge.net>

	* src/jacl/tcl/lang/ServerSocketChannel.java (write,
	flush): Remove overridden methods that attempted to
	provide channel specific error messages. The write
	and flush methods in the super class provide error
	messages that are compatible with Tcl.

2001-11-20  Mo DeJong  <mdejong@users.sourceforge.net>

	* src/jacl/tcl/lang/Channel.java (getNextDescriptor):
	Move the getNextDescriptor method into the TclIO class.
	Update documentation for Channel class.
	* src/jacl/tcl/lang/FileChannel.java:
	* src/jacl/tcl/lang/ServerSocketChannel.java:
	* src/jacl/tcl/lang/SocketChannel.java:
	Invoke TclIO.getNextDescriptor from TclIO class.
	* src/jacl/tcl/lang/TclIO.java (getNextDescriptor):
	Add getNextDescriptor method from Channel class.

2001-11-19  Mo DeJong  <mdejong@users.sourceforge.net>

	* src/jacl/tcl/lang/Channel.java (read): Turn the
	read method into a concrete implementation instead
	of an abstract method.
	* src/jacl/tcl/lang/FileChannel.java (read):
	* src/jacl/tcl/lang/ServerSocketChannel.java (read):
	* src/jacl/tcl/lang/SocketChannel.java (read):
	* src/jacl/tcl/lang/StdChannel.java (read): Make use
	of super class read method instead of including
	read logic in each Channel subclass.

2001-11-19  Mo DeJong  <mdejong@users.sourceforge.net>

	* src/jacl/tcl/lang/Channel.java (close): Fix silly
	cut and paste error that was closing the underlying
	channel twice.

2001-11-19  Mo DeJong  <mdejong@users.sourceforge.net>

	* src/jacl/tcl/lang/Channel.java (tell): Turn the tell
	method into a concrete implementation instead of an
	abstract method. It currently just returns -1.
	* src/jacl/tcl/lang/ServerSocketChannel.java (tell):
	* src/jacl/tcl/lang/SocketChannel.java (tell):
	* src/jacl/tcl/lang/StdChannel.java (tell):
	Remove tell command since it is now handled in the
	super class.

2001-11-19  Mo DeJong  <mdejong@users.sourceforge.net>

	* src/jacl/tcl/lang/Channel.java (seek): Properly indent
	some throws clauses on methods. Turn the seek method into
	a concrete implementation instead of an abstract method.
	By default seek will set the posix error code EINVAL
	to indicate that seeking is not supported. Pass interp
	argument to seek method so we can raise TclExceptions.
	* src/jacl/tcl/lang/FileChannel.java (seek): Update
	method signature to account for changes in Channel class.
	* src/jacl/tcl/lang/SeekCmd.java (cmdProc): Pass interp
	argument to channel's seek command. Don't attempt to
	handle seek not supported case since that will
	be done by the driver.
	* src/jacl/tcl/lang/ServerSocketChannel.java (seek):
	Update method signature to account for changes in Channel
	class. Raise a EACCES posix error code if seek is invoked
	on a server socket so we match Tcl.
	* src/jacl/tcl/lang/SocketChannel.java (seek): Remove
	seek method since this is taken care of in the super class.
	* src/jacl/tcl/lang/StdChannel.java (seek): Remove
	seek method since this is taken care of in the super class.

2001-11-17  Mo DeJong  <mdejong@users.sourceforge.net>

	* src/jacl/tcl/lang/Channel.java (write): Turn
	the write method into a concrete implementation
	instead of an abstract method.
	* src/jacl/tcl/lang/FileChannel.java (write): Invoke
	Channel's write method to check for error writing to
	a read only channel.
	* src/jacl/tcl/lang/SocketChannel.java (write): Use
	new write method in Channel class.
	* src/jacl/tcl/lang/StdChannel.java (write): Use
	new write method in Channel class.

2001-11-17  Mo DeJong  <mdejong@users.sourceforge.net>

	* src/jacl/tcl/lang/Shell.java (ConsoleThread, putLine,
	put): Make use of Tcl Channels instead of writing to
	System.out and System.err directly. This avoids buffering
	conflicts between the Shell and the Tcl interp.

2001-11-17  Mo DeJong  <mdejong@users.sourceforge.net>

	* src/jacl/tcl/lang/Channel.java (flush): Turn the
	flush method into a concrete implementation
	instead of an abstract method.
	* src/jacl/tcl/lang/FileChannel.java (flush): Invoke
	Channel.flush() inside FileChannel's flush() method to
	check for error writing to a read only channel.
	* src/jacl/tcl/lang/ServerSocketChannel.java (flush):
	Avoid passing unneeded 3rd argument to TclException
	constructor.
	* src/jacl/tcl/lang/SocketChannel.java (flush):
	Avoid passing unneeded 3rd argument to TclException
	constructor. Invoke Channel.flush() inside flush
	method instead of dealing directly with the channel.
	* src/jacl/tcl/lang/StdChannel.java (flush, write):
	Remove flush() implementation since it is now handled
	in the Channel class. Add call to flush in the write
	method for the stderr stream to maintain the appearance
	of an unbuffered stream.

2001-11-16  Mo DeJong  <mdejong@users.sourceforge.net>

	* src/jacl/tcl/lang/Channel.java (chanName, close,
	getNextDescriptor): Make chanName member private.
	Turn the close() method into a concrete implementation
	instead of an abstract method. Add getNextDescriptor()
	method to replace getNextFileNum() and getNextSocketNum()
	methods in subclasses.
	* src/jacl/tcl/lang/FileChannel.java (close,
	getNextFileNum): Call supercalss getNextDescriptor()
	instead of our own getNextFileNum(). Override close()
	method to handle our own shutdown needs.
	* src/jacl/tcl/lang/ServerSocketChannel.java (close,
	getNextSockNum): Call supercalss getNextDescriptor()
	instead of our own getNextSockNum(). Override close()
	method to handle our own shutdown needs.
	* src/jacl/tcl/lang/SocketChannel.java (close,
 	getNextSockNum, interp): Remove unneeded interp member.
	Call supercalss getNextDescriptor() instead of
	our own getNextSockNum(). Override close()
	method to handle our own shutdown needs.
	* src/jacl/tcl/lang/StdChannel.java (close, flush,
	open, write): Remove close() method since that
	is now handled in superclass.

2001-11-16  Mo DeJong  <mdejong@users.sourceforge.net>

	* src/jacl/tcl/lang/Channel.java:
	* src/jacl/tcl/lang/FileChannel.java:
	* src/jacl/tcl/lang/ServerSocketChannel.java:
	* src/jacl/tcl/lang/SocketChannel.java:
	* src/jacl/tcl/lang/StdChannel.java:
	Refactor subclases of Channel. Move reader, writer,
	eofCond, BUF_SIZE, and eof() members into the superclass.

2001-11-16  Mo DeJong  <mdejong@users.sourceforge.net>

	* src/jacl/tcl/lang/InfoCmd.java (InfoNameOfExecutableCmd):
	Implement info nameofexecutable command by doing a query
	of the "JAVA" system property.
	* tests/tcl/info.test: Check that the info nameofexecutable
	command does not return "".

2001-11-15  Neil Madden  <neil@tallniel.co.uk>

	* src/jacl/tcl/lang/ServerSocketChannel.java:
	* src/jacl/tcl/lang/SocketChannel.java:
	* src/jacl/tcl/lang/SocketCmd.java:
	* src/jacl/tcl/lang/SocketConnectionEvent.java:
	Add initial socket implementation for both client
	and server sockets. The code does not work with
	async sockets and its functionality is limited
	because of the lack of fconfigure and fileevent
	commands in Jacl.

2001-11-15  Mo DeJong  <mdejong@users.sourceforge.net>

	* src/jacl/tcl/lang/ExecCmd.java (cmdProc): If an
	exec'ed subprocess exits with a non-zero status
	set the error code to a three value list like
	{CHILDSTATUS PID NUMBER}.
	* tests/inprogress/ExecCmd.test: Test error code
	after a call to the exec command.

2001-06-03  Mo DeJong  <mdejong@redhat.com>

	* tests/tcl/interp.test: Add interp-32.1, it checks
	that the child's CWD is inherited from a parent's interp.

2001-06-03  Mo DeJong  <mdejong@redhat.com>

	* src/jacl/tcl/lang/EventuallyFreed.java (dispose): Make
	the dispose() method public, it was incorrectly changed
	from public when the EventuallyFreed class was created.

2001-05-12  Christian Krone  <christian.krone@softwareag.com>

	* src/jacl/tcl/lang/Util.java (findElement): Fix parsing of
	nested quoted braces in lists.
	* tests/tcl/lindex.test: Add test for parsing of nested
	quoted braces in list.

2001-05-12  Christian Krone  <christian.krone@softwareag.com>

	* tests/jacl/Interp.test: Add braces around the result
	for the Interp-5.1 test.

2001-05-12  Christian Krone  <christian.krone@softwareag.com>

	* src/jacl/tcl/lang/Interp.java (removeInterpResolver):
	Use Vector.removeElement()instead of Vector.remove()
	which is not supported by JDK 1.1.

2001-05-05  Mo DeJong  <mdejong@redhat.com>

	* tests/tcljava/JavaImportCmd.test: Fix incorrectly
	spelled error message that was causing test failures.

2001-05-05  Christian Krone  <christian.krone@softwareag.com>

	* src/jacl/tcl/lang/Interp.java (resolvers,
	Interp, eventuallyDispose, ResolverScheme,
	addInterpResolver, getInterpResolver,
	removeInterpResolver):
	* src/jacl/tcl/lang/NamespaceCmd.java (createNamespace,
	findCommand, findNamespaceVar, setNamespaceResolver,
	getNamespaceResolver, Namespace):
	* src/jacl/tcl/lang/Resolver.java: New file.
	* src/jacl/tcl/lang/Var.java (lookupVar):
	* src/jacl/tcl/lang/library/init.tcl (unknown):
	Add interp and namespace variable and command
	resolver implementation.

2001-02-07  Christian Sorensen  <cs@maerskdata.dk>

	* src/jacl/tcl/lang/FileCmd.java (getMtime):
	Divide the File.lastModified() result by
	1000 so that the returned result will
	be in seconds instead of milliseconds.

2001-01-28  Mo DeJong  <mdejong@redhat.com>

	* src/tcljava/tcl/lang/JavaImportCmd.java:
	Fix up diction of error messages.

2001-01-28  Mo DeJong  <mdejong@redhat.com>

	* src/jacl/tcl/lang/SubstCmd.java:
	Use a StringBuffer instead of repeatedly
	concatenating strings together. Remove
	unneeded if block. These changes should
	improve the execution time of the
	subst command.

2001-01-28  Mo DeJong  <mdejong@redhat.com>

	* tests/tcl/join.test:
	* tests/tcl/lindex.test:
	* tests/tcl/link.test:
	* tests/tcl/linsert.test:
	* tests/tcl/list.test:
	* tests/tcl/listObj.test:
	* tests/tcl/llength.test:
	* tests/tcl/lrange.test:
	* tests/tcl/lreplace.test:
	* tests/tcl/lsearch.test:
	* tests/tcl/misc.test:
	* tests/tcl/namespace-old.test:
	* tests/tcl/namespace.test:
	* tests/tcl/obj.test:
	* tests/tcl/parse.test:
	* tests/tcl/parseExpr.test:
	* tests/tcl/parseOld.test:
	* tests/tcl/pkg.test:
	* tests/tcl/platform.test:
	* tests/tcl/proc-old.test:
	* tests/tcl/proc.test:
	* tests/tcl/pwd.test:
	* tests/tcl/regexp.test:
	* tests/tcl/rename.test:
	* tests/tcl/scan.test:
	* tests/tcl/security.test:
	* tests/tcl/set-old.test:
	* tests/tcl/set.test:
	* tests/tcl/split.test:
	* tests/tcl/stack.test:
	* tests/tcl/string.test:
	* tests/tcl/stringObj.test:
	* tests/tcl/subst.test:
	* tests/tcl/switch.test:
	* tests/tcl/timer.test:
	* tests/tcl/trace.test:
	* tests/tcl/unknown.test:
	* tests/tcl/uplevel.test:
	* tests/tcl/upvar.test:
	* tests/tcl/util.test:
	* tests/tcl/var.test:
	* tests/tcl/while-old.test:
	* tests/tcl/while.test: Add or update tests
	to match the ones in Tcl 8.3.

2000-12-27  Mo DeJong  <mdejong@redhat.com>

	* tests/tcl/error.test:
	* tests/tcl/eval.test:
	* tests/tcl/execute.test:
	* tests/tcl/expr-old.test:
	* tests/tcl/expr.test:
	* tests/tcl/fileName.test:
	* tests/tcl/for-old.test:
	* tests/tcl/for.test:
	* tests/tcl/foreach.test:
	* tests/tcl/format.test:
	* tests/tcl/get.test:
	* tests/tcl/history.test:
	* tests/tcl/if-old.test:
	* tests/tcl/if.test:
	* tests/tcl/incr-old.test:
	* tests/tcl/incr.test:
	* tests/tcl/interp.test: Add or update tests
	to match the ones in Tcl 8.3.

2000-12-23  Mo DeJong  <mdejong@redhat.com>

	* tests/tcl/append.test:
	* tests/tcl/assocd.test:
	* tests/tcl/binary.test:
	* tests/tcl/case.test:
	* tests/tcl/clock.test:
	* tests/tcl/compile.test:
	* tests/tcl/concat.test: Add or update tests
	to match the ones in Tcl 8.3. Some tests expose
	minor formatting issues for test arguments.

2000-12-23  Mo DeJong  <mdejong@redhat.com>

	* tests/all.tcl: Add missing test init file.
	* tests/defs: Add Tcl only implementations
	of test commands like testsetassocdata.

2000-12-23  Mo DeJong  <mdejong@redhat.com>

	* tests/tcl/CdCmd.test:
	* tests/tcl/FileCmd.test:
	* tests/tcl/Procedure.test:
	* tests/tcl/PwdCmd.test:
	* tests/tcl/RegexpCmd.test:
	* tests/tcl/ReturnCmd.test:
	* tests/tcl/SwitchCmd.test:
	* tests/tcl/UpdateCmd.test: Add tcltest
	package initilization and cleanup code
	to each of the test cases.

2000-12-22  Mo DeJong  <mdejong@redhat.com>

	* Makefile.in: The test target will now source
	tests/all.tcl instead of tests/all.
	* tests/all: Remove.
	* tests/defs: Remove old tcltest implementation,
	keep some old helper procs.
	* tests/tcltest.tcl: Import tcltest from Tcl 8.3.
	* tests/inprogress/AfterCmd.test:
	* tests/inprogress/BgErrorMgr.test:
	* tests/inprogress/CallFrame.test:
	* tests/inprogress/EventAdaptor.test:
	* tests/inprogress/ExecCmd.test:
	* tests/inprogress/ExprCmd.test:
	* tests/inprogress/GlobCmd.test:
	* tests/inprogress/TimerHandler.test:
	* tests/inprogress/Unicode.test:
	* tests/inprogress/UplevelCmd.test:
	* tests/inprogress/Util.test:
	* tests/jacl/FileCmd.test:
	* tests/jacl/IdleHandler.test:
	* tests/jacl/Interp.test:
	* tests/jacl/Notifier.test:
	* tests/tclblend/javaCmd.test:
	* tests/tclblend/javaIdle.test:
	* tests/tclblend/javaInterp.test:
	* tests/tclblend/javaObj.test:
	* tests/tclblend/javaTimer.test:
	* tests/tclblend/javaUtil.test:
	* tests/tcljava/ArrayObject.test:
	* tests/tcljava/AutomaticSignature.test:
	* tests/tcljava/BeanEvent.test:
	* tests/tcljava/BeanEventMgr.test:
	* tests/tcljava/ClassRep.test:
	* tests/tcljava/FieldSig.test:
	* tests/tcljava/FuncSig.test:
	* tests/tcljava/JavaBindCmd.test:
	* tests/tcljava/JavaCallCmd.test:
	* tests/tcljava/JavaCastCmd.test:
	* tests/tcljava/JavaDefineClassCmd.test:
	* tests/tcljava/JavaEventCmd.test:
	* tests/tcljava/JavaFieldCmd.test:
	* tests/tcljava/JavaImportCmd.test:
	* tests/tcljava/JavaInfoCmd.test:
	* tests/tcljava/JavaInstanceofCmd.test:
	* tests/tcljava/JavaInvoke.test:
	* tests/tcljava/JavaIsNullCmd.test:
	* tests/tcljava/JavaLoadCmd.test:
	* tests/tcljava/JavaLock.test:
	* tests/tcljava/JavaNewCmd.test:
	* tests/tcljava/JavaNullCmd.test:
	* tests/tcljava/JavaPropCmd.test:
	* tests/tcljava/JavaThrowCmd.test:
	* tests/tcljava/JavaTryCmd.test:
	* tests/tcljava/PkgInvoker.test:
	* tests/tcljava/PropertySig.test:
	* tests/tcljava/ReflectException.test:
	* tests/tcljava/ReflectObject.test:
	* tests/tcljava/TclEvent.test: Add tcltest
	package initilization and cleanup code
	to each of the test cases.

2000-11-19  Christian Krone  <christian.krone@softwareag.com>

	* src/jacl/tcl/lang/StdChannel.java: (Bug #121678:) The recently
	introduced method StdChannel.getChanName() was removed again,
	since with its existence the standard channels no longer occupy
	the first three slots in filename channel.
	* src/jacl/tcl/lang/ReadCmd.java:
	* src/jacl/tcl/lang/PutsCmd.java:
	* src/jacl/tcl/lang/GetsCmd.java: These command implementations
	now check themself for the needed read/write access, since the
	underlying channel don't know the user specified name of the
	channel.

2000-11-14  Mo DeJong  <mdejong@redhat.com>

	* tcljava.m4: The AC_FD_LOG macro was renamed
	to AS_MESSAGE_LOG_FD in the autoconf CVS. Use
	the new macro.

2000-10-31  Mo DeJong  <mdejong@redhat.com>

	* configure: Regen.
	* tcljava.m4: The configure script would fail
	if jikes was not found, fix that.

2000-10-29  Mo DeJong  <mdejong@redhat.com>

	* configure: Regen.
	* tcljava.m4: Properly quote call to AC_CACHE_CHECK.
	* src/native/javaCmd.c: Fixup a couple of comments.
	* tests/tcljava/ArrayObject.test: Correct test number.

2000-10-28  Mo DeJong  <mdejong@redhat.com>

	Finish merge from ajuba-tclblend-contract-2000-08-01-branch.

2000-10-27  Daniel Wickstrom  <danw@rtp.ericsson.se>

	* Makefile.in: Don't build unixNotifier.o.
	* src/jacl/tcl/lang/Notifier.java: Minor
	comment fixups.
	* src/native/java.h (JavaAlertNotifier, JavaDisposeNotifier,
	JavaInitNotifier): Remove declarations for unused functions.
	* src/native/javaNotifier.c: Add thread local cache for
	Notifier info, save the Tcl thread id in the Notifier instance.
	* src/tclblend/tcl/lang/Notifier.java: Support Notifier
	on a per thread basis.
	* unix/README.jacl:
	* unix/README.tclblend: Fixup build notes.
	* unix/unixNotifier.c: Removed single threaded
	Notifier implementation for Unix.
	* win/makefile.vc: Don't build win/winNotifier.o.
	* win/tclRegexp.h: Removed old support file.
	* win/winNotifier.c: Removed single threaded
	Notifier implementation for Windows.

2000-10-27  Mo DeJong  <mdejong@redhat.com>

	* src/jacl/tcl/lang/Notifier.java: Change
	comments from C style to Java style.

2000-10-25  Mo DeJong  <mdejong@redhat.com>

	* src/native/javaObj.c: Added comment about
	how CObject.newInstance() is invoked.
	* src/tclblend/tcl/lang/CObject.java: CObject
	now extends TclEvent. When a dangling reference
	to a Tcl_Obj* is found in the CObject.finalize()
	method, it is freed in the creating thread instead
	of the JVM's GC thread.

2000-10-25  Mo DeJong  <mdejong@redhat.com>

	* docs/TclJavaLib/InternalRep.htm:
	* docs/TclJavaLib/ReflectObject.htm:
	* docs/TclJavaLib/TclBoolean.htm:
	* docs/TclJavaLib/TclDouble.htm:
	* docs/TclJavaLib/TclIndex.htm:
	* docs/TclJavaLib/TclInteger.htm:
	* docs/TclJavaLib/TclList.htm:
	* docs/TclJavaLib/TclObject.htm:
	* docs/TclJavaLib/TclString.htm:
	* docs/TclJavaLib/traceVar.htm: Update to
	account for change to InternalRep class.
	* src/empty/empty.jar: Regen.
	* src/empty/tcl/lang/CObject.java:
	* src/jacl/tcl/lang/CObject.java:
	* src/jacl/tcl/lang/NamespaceCmd.java:
	* src/jacl/tcl/lang/TclByteArray.java:
	* src/jacl/tcl/lang/TclList.java:
	* src/tclblend/tcl/lang/CObject.java:
	* src/tcljava/tcl/lang/ClassRep.java:
	* src/tcljava/tcl/lang/FieldSig.java:
	* src/tcljava/tcl/lang/FuncSig.java:
	* src/tcljava/tcl/lang/InternalRep.java:
	* src/tcljava/tcl/lang/JavaNewCmd.java:
	* src/tcljava/tcl/lang/PropertySig.java:
	* src/tcljava/tcl/lang/ReflectObject.java:
	* src/tcljava/tcl/lang/TclBoolean.java:
	* src/tcljava/tcl/lang/TclDouble.java:
	* src/tcljava/tcl/lang/TclIndex.java:
	* src/tcljava/tcl/lang/TclInteger.java:
	* src/tcljava/tcl/lang/TclString.java: Change InternalRep
	into an interface instead of an abstract class.

2000-10-25  Mo DeJong  <mdejong@redhat.com>

	* src/tcljava/tcl/lang/TclObject.java:
	* src/tcljava/tcl/lang/TclString.java: Comment fixup.

2000-10-22  Mo DeJong  <mdejong@redhat.com>

	* src/tests/tcljava/tests/javabind/Bind.java (run): Check
	for a null callback so as to avoid a NullPointerException.
	* tests/tcljava/JavaBindCmd.test: Give test thread time
	to queue up the event, then process all events in queue.

2000-10-22  Mo DeJong  <mdejong@redhat.com>

	* src/native/javaCmd.c (TclThreadCleanup, DestroyJVM,
	DetachTclThread, FreeJavaCache): Rename TclThreadCleanup
	to DetachTclThread. Add DestroyJVM callback to cleanup
	the thread that creates the JVM. Add FreeJavaCache,
	this method releases any global references in the JVM.

2000-10-21  Mo DeJong  <mdejong@redhat.com>

	* src/native/javaObj.c (JavaObjInit): Fix
	JavaObjInit so that it only inits the global
	data once. Add cmdTypePtrLock mutex to
	protect the global data from multiple threads.

2000-10-09  Mo DeJong  <mdejong@redhat.com>

	* src/xputils/xputils.tcl (appendpath, prependpath):
	Use list command to quote arguments set to uplevel.
	This fixes a bug that caused xputils to fail under Windows.

2000-08-26  Mo DeJong  <mdejong@redhat.com>

	* src/native/javaCmd.c (JavaSetupJava, TclThreadCleanup):
	Move JavaInfo cache into thread local storage. Removed
	javaVM_init_mutex. Create thread exit handler that
	will detach a Tcl thread from the JVM.

2000-08-26  Mo DeJong  <mdejong@redhat.com>

	* src/native/java.h (java, JavaGetCache): Remove
	global java variable, replaced it with JavaGetCache().
	* src/native/javaCmd.c:
	* src/native/javaIdle.c:
	* src/native/javaInterp.c:
	* src/native/javaList.c:
	* src/native/javaNotifier.c:
	* src/native/javaObj.c:
	* src/native/javaTimer.c: Call JavaGetCache() to get
	the JavaInfo pointer for the current thread.

2000-08-26  Mo DeJong  <mdejong@redhat.com>

	* src/native/java.h: Add method that corresponds
	to tcl.lang.Exceptions's constructor to the JavaInfo struct.
	* src/native/javaCmd.c (AddToClassCache, AddToMethodCache,
	AddToFieldCache): Remove the global arrays that were used
	to store class, method, and field signatures. We now init
	the JavaInfo struct by calling methods.

2000-08-23  Jiang Wu  <jwu@cs.stanford.edu>

	* src/tclblend/tcl/lang/Notifier.java (preserve, release,
	queueEvent, deleteEvents, deleteEvent, serviceEvent,
	getAvailableEvent, hasEvents): Fix bugs in Notifier,
	use an internal monitor instead of one on the class
	so that an event that calls vwait does not block
	other events from getting added to the after queue.

2000-08-23  Mo DeJong  <mdejong@redhat.com>

	* src/tests/tcljava/tests/AppendEventQueueThread.java: Add source
	for enqueue of event that does a vwait test.
	* tests/tcljava/TclEvent.test: Add test case for notifier
	queue bug.

2000-08-23  Mo DeJong  <mdejong@redhat.com>

	* configure: Regen.
	* tcljava.m4: Reject Tcl build that does not
	include thread support.

2000-08-19  Mo DeJong  <mdejong@redhat.com>

	* Makefile.in: Renamed TCLBLEND_CLASS_NAMES variable
	to TCLBLEND_JNI_HEADER_CLASS_NAMES.

2000-08-08  Mo DeJong  <mdejong@redhat.com>

	* src/native/java.h (JavaGetEnv):
	* src/native/javaCmd.c (JavaGetEnv, JavaInitEnv):
	Rewrite Tcl Blend initilization, create new method
	to handle all initialization in a thread safe way.
	* src/native/javaIdle.c:
	* src/native/javaInterp.c:
	* src/native/javaNotifier.c:
	* src/native/javaObj.c:
	* src/native/javaTimer.c: Call JavaGetEnv without
	an Interp argument.

2000-08-07  Mo DeJong  <mdejong@redhat.com>

	* src/native/javaCmd.c (JavaGetEnv): Rewrite
	JavaGetEnv, it was implemented as two methods
	that did the exact same thing for two different
	versions of the JDK. It is now a single method.

2000-08-06  Mo DeJong  <mdejong@redhat.com>

	* src/native/java.h:
	* src/native/javaCmd.c:
	* src/native/javaInterp.c:
	* src/tclblend/tcl/lang/NativeLock.java: Remove
	the tcl.lang.NativeLock class, it is not needed
	since we removed the big global lock.

2000-07-30  Mo DeJong  <mdejong@redhat.com>

	* src/native/java.h:
	* src/native/javaCmd.c:
	* src/native/javaIdle.c:
	* src/native/javaInterp.c:
	* src/native/javaList.c:
	* src/native/javaNotifier.c:
	* src/native/javaObj.c:
	* src/native/javaTimer.c:
	* src/native/javaUtil.c: Put the JNIEnv
	pointer in thread local storage. Create
	a per JVM init flag and a per thread init
	flag. Tcl interps in other threads can
	communicate with the JVM in the main
	thread using the synchronization
	primitives project by the JNI. Remove
	JAVA_LOCK, JAVA_UNLOCK, PUSH_JAVA_ENV,
	and POP_JAVA_ENV macros and associated
	Java monitor. Remove JavaSetEnv function.

2000-07-29  Jiang Wu  <jwu@cs.stanford.edu>

	* win/makefile.vc:
	Fix the makefile.vc to install the new xputil package, remove
	some errors that stopped the build, and install the .dll and
	.jar in lib/tclblend rather than lib.  The makefile now mostly
	matches what the UNIX side does for tclblend 1.3.

2000-10-28  Mo DeJong  <mdejong@redhat.com>

	Begin merge from ajuba-tclblend-contract-2000-08-01-branch.

2000-10-04  Mo DeJong  <mdejong@redhat.com>

	* demos/watchpkg/README: Add a better
	example of use of the sw* commands.

2000-08-22  Mo DeJong  <mdejong@redhat.com>

	* src/tests/tcljava/tests/JavaTest.java:
	* tests/tcljava/JavaInvoke.test: Add identity
 	test case for passing of a java.lang.String
	ReflectObject to a Java method.

2000-08-20  Christian Krone  <krischan@sql.de>

	* src/jacl/tcl/lang/LreplaceCmd.java:
	* tests/tcl/lreplace.test: Update lreplace
	command to be 8.4 compliant.

2000-08-20  Christian Krone  <krischan@sql.de>

	* src/jacl/tcl/lang/LsearchCmd.java: Update
	lsearch command to be 8.4 compatible.
	* tests/tcl/LsearchCmd.test: Remove.
	* tests/tcl/lsearch.test: Add 8.4 test cases.

2000-08-20  Christian Krone  <krischan@sql.de>

	* src/jacl/tcl/lang/Expression.java (ExprGetValue):
	Expressions with &&, || or ?: now accept boolean string values.

2000-08-20  Christian Krone  <krischan@sql.de>

	* src/jacl/tcl/lang/Expression.java (DoubleTooSmall,
	ExprLooksLikeInt): Check for ARITH UNDERFLOW, rename
	ExprLooksLikeInt to looksLikeInt.
	* src/jacl/tcl/lang/Parser.java (parseVar, backslash):
	No Exception, when parsing the following command: "set $a(foo".
	Correct handling for \x123 characters with its 8th bit set (>= \x80).
	* src/jacl/tcl/lang/StringCmd.java: 8.4 compatible string command.
	* src/jacl/tcl/lang/TclByteArray.java (toString): And a byte
	with 0xff to produce a char.
	* src/jacl/tcl/lang/Util.java (strtoul, toTitle): 0X123 will now
	be detected as valid hex number. 8.4 compatible error message for
	bad octal numbers. Add toTitle method to support string command.
	* tests/tcl/string.test: 8.4 compatible tests for string command.

2000-08-20  Christian Krone  <krischan@sql.de>

	* src/jacl/tcl/lang/FileCmd.java: Don't
	back up over multiple dots in a file
	extension. This matches the behavior
	of newer versions of Tcl.

2000-08-20  Christian Krone  <krischan@sql.de>

	* src/jacl/tcl/lang/ClockCmd.java:
	* tests/tcl/clock.test: Update Jacl's clock
	command to be Tcl 8.4 compliant.

2000-08-20  Christian Krone  <krischan@sql.de>

	* configure.in: Pass -ms5m -mx22m in JAVA_FLAGS.
	* diffs.txt: Add note about new interp command.
	* jaclsh.in: Dont set JAVA_FLAGS here.
	* new_features.txt: Add note about new interp command.
	* src/jacl/tcl/lang/BgErrorMgr.java (processIdleEvent):
	Add calls to Interp.preserve() and Interp.release().
	* src/jacl/tcl/lang/CatchCmd.java:
	Add call to Interp.resetResult().
	* src/jacl/tcl/lang/EventuallyFreed.java:
	Implement a ref counting scheme like
	Tcl_Preserve and Tcl_Release. We can't
	use GC because of Tcl's semantics.
	* src/jacl/tcl/lang/Interp.java (dispose,
	eventuallyDispose, createCommands,
	deleteCommandFromToken, renameCommand, preventAliasLoop,
	resetResult, eval, processUnexpectedResult, transferResult,
	hideCommand, exposeCommand, hideUnsafeCommands, invokeGlobal,
	invoke, allowExceptions):
	Make Interp derive from EventuallyFreed.
	Add guts needed to support slave/safe interps.
	Add interp command. Set the returnCode to TCL.OK
	when resetResult() is called. Add support for
	propagating error info slave to master interp as well
 	as hiding and exposing commands.
	* src/jacl/tcl/lang/InterpAliasCmd.java: Add command
	that will proxy aliases commands in an interp.
	* src/jacl/tcl/lang/InterpCmd.java: Add command
	that handles the interp Tcl command.
	* src/jacl/tcl/lang/InterpSlaveCmd.java: Add command
	that will handle commands for slave interp in the master.
	* src/jacl/tcl/lang/library/init.tcl: Remove stub
	interp command.
	* tests/tcl/interp.test: Add interp regression tests.

2000-08-19  Christian Krone  <krischan@sql.de>

	* src/jacl/tcl/lang/BgErrorMgr.java: Use
	Java style comments instead of C style ones.

2000-07-31  Mo DeJong  <mdejong@redhat.com>

	* src/jacl/tcl/lang/FconfigureCmd.java: Don't
	raise error when -buffering option is given,
	just silently do nothing for now.
	* src/jacl/tcl/lang/ReadCmd.java: Fix bug
	that caused channel open with r+ to not
	work with the read command.

2000-07-31  Christian Krone  <krischan@sql.de>

	* src/jacl/tcl/lang/Channel.java: Add refCount.
	* src/jacl/tcl/lang/CloseCmd.java (cmdProc):
	Use TclIO.unregisterChannel.
	* src/jacl/tcl/lang/FileChannel.java: Fix typos.
	* src/jacl/tcl/lang/OpenCmd.java: Fix typos.
	* src/jacl/tcl/lang/StdChannel.java (getChanName):
	Add getChanName method to StdChannel class.
	* src/jacl/tcl/lang/TclIO.java: Use refCount.

2000-07-29  Mo DeJong  <mdejong@redhat.com>

	* tests/tcljava/JavaLock.test: Use
	error string from Tcl 8.3 when a
	command is invoked with the incorrect
	number of arguments. Jacl does not
	yet generate a Tcl 8.3 compliant
	error in this case, so some of its
	regression tests will fail.

2000-07-29  Mo DeJong  <mdejong@redhat.com>

	* src/empty/empty.jar: Regen.
	* src/empty/tcl/lang/Interp.java:
	* src/jacl/tcl/lang/Interp.java:
	* src/native/javaInterp.c:
	* src/tclblend/tcl/lang/Interp.java:
	* src/tcljava/tcl/lang/ReflectObject.java:

2000-07-16  Christian Krone  <krischan@sql.de>

	* src/jacl/tcl/lang/ClockCmd.java: Upgrade
	Jacl's clock command to match Tcl 8.3.
	Even stardates are supported!
	* tests/tcl/clock.test: Upgrade to Tcl 8.3.

2000-07-13  Mo DeJong  <mdejong@redhat.com>

	* tcljava.m4: Add doublequotes around
	test variables that might be empty.

2000-07-13  Mo DeJong  <mdejong@redhat.com>

	* src/empty/empty.jar: Regen.
	* src/empty/tcl/lang/Interp.java:
	* src/jacl/tcl/lang/Interp.java:
	* src/tclblend/tcl/lang/Interp.java: Add conflict table variable.
	* src/tcljava/tcl/lang/ReflectObject.java: Overhaul reflect table
	implementation to avoid problem with object hash overlap in JDK
	1.2. We now use a second conflict table to store hash conflicts.

2000-06-15  Mo DeJong  <mdejong@redhat.com>

	* src/native/java.h:
	* src/native/javaCmd.c:
	* src/native/javaIdle.c:
	* src/native/javaInterp.c:
	* src/native/javaList.c:
	* src/native/javaNotifier.c:
	* src/native/javaObj.c:
	* src/native/javaTimer.c:
	* src/native/javaUtil.c:
	Rename JAVA_LOCK/JAVA_UNLOCK to
	PUSH_JAVA_ENV/POP_JAVA_ENV, create
	new JAVA_LOCK and JAVA_UNLOCK macros
	that just grab the monitor, use these
	new JAVA_LOCK/JAVA_UNLOCK macros in
	the rest of the code.

2000-06-03  Mo DeJong  <mdejong@redhat.com>

	* demos/pyramidpkg/AppletConsole.java:
	* demos/pyramidpkg/ConsoleKeyListener.java:
	* demos/pyramidpkg/Pyramid.java:
	Overhauled the pyramid demo so that it uses
	the Tcl event queue in a thread safe way.

2000-06-03  Mo DeJong  <mdejong@redhat.com>

	* new_features.txt: Added notes about
	new JVM support. Minor comment fixup.
	* src/native/java.h: Removed old code
	that supported Tcl 8.0.
	* src/jacl/tcl/lang/Interp.java (appendElement):
	Removed extra call to toString() on result.

2000-06-03  Mo DeJong  <mdejong@redhat.com>

	* Makefile.in: Merged from unix/Makefile.in
	* aclocal.m4:
	* autogen.sh: Added
	* configure: Added
	* configure.in: Merged from unix/configure.in
	* jaclsh.in: Added
	* jtclsh.in: Added
	* tcljava.m4: Added
	* tcljavaConfig.sh.in: Added
	* unix/Makefile.in: Removed
	* unix/configure.in: Removed
	* unix/install-sh: Removed
	* unix/jaclsh.in: Removed
	* unix/jtclsh.in: Removed
	* unix/tcljavaConfig.sh.in: Removed
	Finished major overhaul of the build
	system. The new configure process
	is much more robust and will support
	more systems that the older one.
	Tcl Blend can now use the Kaffe JVM.
	Support for IBM Java2-13 also added.

2000-05-24  Mo DeJong  <mdejong@redhat.com>

	* tests/inprogress/Unicode.test: Overhauled
	the unicode conversions/substitution tests.
	They now take a lot less time to run.

2000-05-24  Mo DeJong  <mdejong@redhat.com>

	* src/jacl/tcl/lang/Interp.java (evalResource):
	* src/tclblend/tcl/lang/Interp.java (evalResource):
	Changed class that getResourceAsStream is called on
	so that we don't use a system class loader.

2000-05-21  Mo DeJong  <mdejong@redhat.com>

	* src/jacl/tcl/lang/Shell.java: Removed
	unused bits of old code that were
	still lying around. Added FIXME comment
	about TCL.OK which is not accessible.

2000-05-21  Mo DeJong  <mdejong@redhat.com>

	* unix/Makefile.in: Changed target
	name from dists to dist to conform
	to GNU specs.

2000-05-14  Mo DeJong  <mdejong@redhat.com>

	* unix/configure.in: Moved minimum
	version number back to 8.3 instead
	of 8.3.1 because of a bug in Tcl's
	package command.

2000-05-14  Mo DeJong  <mdejong@redhat.com>

	* unix/Makefile.in: Fixed up "make test"
	rules, added output that makes it easy
	to run the tests from "make shell".

2000-05-14  Mo DeJong  <mdejong@redhat.com>

	* src/tclblend/tcl/lang/Interp.java: Fixed
	up comments about flags argument, for instance
	GLOBAL_ONLY was changed to TCL.GLOBAL_ONLY.

2000-05-14  Mo DeJong  <mdejong@redhat.com>

	* src/jacl/tcl/lang/Shell.java: Added calls
	to preserve() and release() on cmd object being
	passed to recordAndEval() to avoid a null
	pointer exception.

2000-05-14  Mo DeJong  <mdejong@redhat.com>

	* src/pkgIndex.tcl:
	* src/tcljava/tcl/lang/BlendExtension.java:
	Moved the exporting of commands in the java
	namespace from pkgIndex.tcl to BlendExtension.java
	so that it will work in both Jacl and Tcl Blend.

2000-05-14  Mo DeJong  <mdejong@redhat.com>

	* docs/TclJavaLib/Eval.htm:
	* src/jacl/tcl/lang/BgErrorMgr.java:
	* src/jacl/tcl/lang/Interp.java:
	* src/jacl/tcl/lang/Parser.java:
	* src/tcljava/tcl/lang/TCL.java:
	* src/tests/jacl/tcl/lang/TestEval2Cmd.java:
	* src/tests/jacl/tcl/lang/TestEvalObjvCmd.java:
	Moved eval() flags like TCL_EVAL_GLOBAL
	from the Jacl Parser class to the tcljava
	TCL class. This makes it possible to write
	code that calls eval() with flags arguments
	that works in both Jacl and Tcl Blend. Also
	removed an unused variable from Jacl's Interp.

2000-05-14  Mo DeJong  <mdejong@redhat.com>

	* src/jacl/tcl/lang/Interp.java: Removed
	unused primaryThread variable.

2000-05-14  Mo DeJong  <mdejong@redhat.com>

	* src/jacl/tcl/lang/ConsoleEvent.java: Removed
	class as it is no longer needed after changes to Shell.
	* src/jacl/tcl/lang/Shell.java: Overhauled the
	way the Shell program interacts with the Interp.
	The old way was not thread safe. The prompt displayed
	when a command is not yet complete has also been
	changed to match recent verisons of Tcl.

2000-05-13  Mo DeJong  <mdejong@redhat.com>

	* src/pkgIndex.tcl: Added missing
	namespace export of the java::import cmd.

2000-05-13  Mo DeJong  <mdejong@redhat.com>

	* src/native/javaCmd.c:
	* src/native/javaObj.c:
	* src/native/javaUtil.c:
	* src/native/tclResult.c:
	* unix/Makefile.in:
	* unix/configure.in:
	Removed old compat code that supported
	building Tcl Blend with Tcl 8.0.
	We now require Tcl 8.3.1 as a minimum.

2000-05-13  Mo DeJong  <mdejong@redhat.com>

	* unix/Makefile.in: Changed var named
	TCL_INSTALL_BIN_DIR to TCL_INSTALL_LIB_DIR.
	Added "make gdb" rule for Tcl Blend debugging.
	* unix/configure.in: Added search on PATH for
	gdb. Changed var named TCL_INSTALL_BIN_DIR to
	TCL_INSTALL_LIB_DIR.

2000-05-13  Mo DeJong  <mdejong@redhat.com>

	* src/jacl/tcl/lang/Notifier.java:
	Fixed small typo in a comment.

2000-05-13  Mo DeJong  <mdejong@redhat.com>

	* src/jacl/tcl/lang/Shell.java:
	Dropped use of Jacl Channel objects in
	favor of directly calling System.in and
	System.out.

2000-04-07  Mo DeJong  <mdejong@redhat.com>

	* README.jacl:
	* README.tclblend: Fixed up README files
	for the 1.3 version.
	* src/pkgIndex.tcl: Major overhaul of
	the tclblend package loading process, we
	now make use of the XpUtils package.
	* src/jacl/tcl/lang/Interp.java: Updated
	Java package version to 1.3.0.
	* src/tclblend/tcl/lang/Interp.java: Moved
	name of tclblend shared lib into a variable.
	* src/tcljava/tcl/lang/BlendExtension.java:
	Updated Java package version to 1.3.0.
	* src/tcljava/tcl/lang/TclInteger.java:
	Added Tcl C function names to documentation.
	* src/xputils/iload.tcl:
	* src/xputils/iload.test:
	* src/xputils/pkgIndex.tcl:
	* src/xputils/xputils.tcl:
	* src/xputils/xputils.test:
	Added XpUtils package for Tcl Blend.
	* unix/Makefile.in: Added tcljavaConfig.sh support.
	Fixed runtime linker search path so that it checks
	where the tcl lib will be installed not where it was
	built. Fixed install so that all tcljava libraries
	are installed into a common Tcl/lib/tcljava${VERSION}
	directory. Added support for XpUtils package.
	* unix/configure.in: Updated Java package version
	to 1.3.0. Added tcljavaConfig.sh support.
	Set minimum supported Tcl version to 8.3.
	* unix/jaclsh.in:
	* unix/jtclsh.in:
	Updated to account for new lib install location.
	* unix/tcljavaConfig.sh.in: New file.
	* unix/tools/vutil/current:
	* win/makefile.vc:
	Updated Java package version to 1.3.0.

2000-04-03  Mo DeJong  <mdejong@redhat.com>

	* src/jacl/tcl/lang/ConsoleEvent.java:
	* src/jacl/tcl/lang/Shell.java:
	* src/tcljava/tcl/lang/TclException.java: Fixed
	up the way an event is sent to an interp and
	how the error result is returned so that
	the Shell class is more thread safe.

2000-04-03  Mo DeJong  <mdejong@redhat.com>

	* diffs.txt: Added note about Interp.recordAndEval
	* new_features.txt: Added note about the addition
	of the history command.
	* docs/cFunctions.html: Fixed Interp.recordAndEval
	doc and reformatted to a single list.
	* docs/TclJavaLib/Eval.htm: Fixed Interp.recordAndEval
	documentation.
	* src/jacl/tcl/lang/ConsoleEvent.java: Fixed up
	Interp.recordAndEval method invocation.
	* src/jacl/tcl/lang/Interp.java: Changed signature
	for recordAndEval method.
	* src/tclblend/tcl/lang/Interp.java: Added empty stub
	for recordAndEval method.
	* tests/tcl/history.test: Added regression tests for
	history command.

2000-04-01  Mo DeJong  <mdejong@redhat.com>

	* src/tcljava/tcl/lang/ReflectObject.java: improved some
	error and debug messages.

2000-04-01  Mo DeJong  <mdejong@redhat.com>

	* unix/Makefile.in: added "make check" rule as an alias
	to "make test" to conform to the GNU coding standards.

2000-04-01  Mo DeJong  <mdejong@redhat.com>

	* unix/Makefile.in:
	* win/makefile.vc: Fixed bug that caused the pyramidpkg
	to get compiled and shipped with tclblend. This fix was
	also back ported to the old 1.2 version.

2000-04-01  Mo DeJong  <mdejong@redhat.com>

	* unix/kaffe_tests: removed useless file.

2000-04-01  Mo DeJong  <mdejong@redhat.com>

	* unix/Makefile.in: fixed up "make dists" rule.

2000-03-30  Mo DeJong  <mdejong@redhat.com>

	* changes.txt: updated contents as a result
	of back porting fixes to the 1.2 branch.

2000-03-29  Mo DeJong  <mdejong@redhat.com>

	* unix/configure.in: removed IRIX hack that was added
	on 2000-02-23 but in fact did not work.

2000-03-20 Mo DeJong  <mdejong@redhat.com>

	* src/tests/tcljava/tests/javabind/ActionEvent.java:
	* src/tests/tcljava/tests/javabind/ActionListener.java:
	* src/tests/tcljava/tests/javabind/Bind.java:
	* tests/tcljava/JavaBindCmd.test:
	* unix/Makefile.in
	Added new multi-threaded test case for the java::bind command.

2000-03-17 Mo DeJong  <mdejong@redhat.com>

	* tests/inprogress/Unicode.test: Added test cases
	for Jacl substitution and passing of strings from
	Java to Tcl.
	* src/jacl/tcl/lang/Parser.java:
	Fixed a horrible bug that caused \u1234 to be
	parsed as \u1234 + 4. The parser was off by one.

2000-03-17 Mo DeJong  <mdejong@redhat.com>

	* docs/cFunctions.html:
	* docs/TclJavaLib/TclInteger.htm:
	* src/jacl/tcl/lang/LindexCmd.java:
	* src/jacl/tcl/lang/LinsertCmd.java:
	* src/jacl/tcl/lang/LrangeCmd.java:
	* src/jacl/tcl/lang/LreplaceCmd.java:
	* src/jacl/tcl/lang/LsortCmd.java:
	* src/jacl/tcl/lang/StringCmd.java:
	* src/jacl/tcl/lang/Util.java:
	* src/tcljava/tcl/lang/TclInteger.java:
	* tests/tcl/lindex.test:
	* tests/tcl/linsert.test:
	* tests/tcl/lrange.test:
	* tests/tcl/lreplace.test:
	* tests/tcl/string.test:
	Renamed and moved the TclInteger.getForIndex() method
	to Util.getIntForIndex(). It is a
	mapping for the TclGetIntForIndex function
	which is private, so it did not belong
	in TclInteger. Along with this change, I
	updated the implementation of getIntForIndex
	so that it is compatible with Tcl 8.3, which
	also required adding the Util.checkBadOctal()
	method. A number of regression test were update
	to account for these changes.

2000-03-14  Mo DeJong  <mdejong@redhat.com>

	* demos/packDemo/StringSplitter.java: Removed file.
	* demos/packDemo/PackerLayout.java: Added split()
	method that was implemented in StringSplitter. Also
	added a method to query the current pack settings.
	The ability to "update" a widget was also added.

2000-03-10  Mo DeJong  <mdejong@redhat.com>

	* src/jacl/tcl/lang/Expression.java:
	* src/jacl/tcl/lang/StringCmd.java:
	* src/jacl/tcl/lang/Util.java: Got rid of the
	Util.isLetterOrDigit() method. It was a workaround
	for a bug in the Microsoft JVM. Since we do not
	support the Microsoft JVM and it does not exist
	anymore, there is no reason to leave this bug
	workaround in the code.

2000-03-01  Mo DeJong  <mdejong@redhat.com>

	* diffs.txt:
	* new_features.txt:
	* src/jacl/tcl/lang/BinaryCmd.java:
	* src/jacl/tcl/lang/TclByteArray.java:
	* tests/tcl/binary.test:
	* src/jacl/tcl/lang/Interp.java: Added implementation
	of Tcl's binary comand to Jacl. The implementation was donated
	by Christian Krone <krischan@sql.de>.

2000-03-01  Mo DeJong  <mdejong@redhat.com>

	* README.jacl:
	* README.tclblend: Updated Team member names.

2000-02-23  Mo DeJong  <mdejong@redhat.com>

	* src/tclblend/tcl/lang/Interp.java: Removed old code
	that was commented out. Fixed comments.

2000-02-23  Mo DeJong  <mdejong@redhat.com>

	* unix/configure.in: improved the error message displayed when
	the directory given by --with-tcl does not exist by adding
	the name of the directory we are searching for to the err msg.	

2000-02-23  Mo DeJong  <mdejong@redhat.com>

	* docs/cFunctions.html:
	* docs/TclJavaLib/Eval.htm:
	* src/jacl/tcl/lang/ConsoleEvent.java:
	* src/jacl/tcl/lang/Interp.java:
	* src/jacl/tcl/lang/library/history.tcl:
	* src/jacl/tcl/lang/library/init.tcl: Added implementation of
	the history command to Jacl. The implementation was donated
	by Christian Krone <krischan@sql.de>.

2000-02-23  Mo DeJong  <mdejong@redhat.com>

	* README.jacl:
	* diffs.txt:
	* new_features.txt:
	* unix/Makefile.in:
	* src/jacl/tcl/lang/RegexpCmd.java:
	* src/jacl/tcl/lang/RegsubCmd.java:
	* src/jacl/tcl/lang/Util.java:
	* src/jacl/sunlabs/brazil/util/regexp/Regexp.java:
	* src/jacl/sunlabs/brazil/util/regexp/Regsub.java:
	* src/jacl/tcl/lang/TclRegexp.java: Added new regular
	expression implementation for Jacl donated by
	Colin Stevens <colin.stevens@sun.com>.

2000-02-23  Mo DeJong  <mdejong@redhat.com>

	* license.oro:
	* src/jacl/oro.jar:
	* src/jacl/tcl/regex/OroRegexMatcher.java:
	* src/jacl/tcl/regex/OroRegexpCmd.java:
	* src/jacl/tcl/regex/OroRegsubCmd.java:
	* src/jacl/tcl/lang/RegexMatcher.java: Removed all files
	that were part of the ORO regexp implementation for Jacl.

2000-02-23  Mo DeJong  <mdejong@redhat.com>

	This ChangeLog file is new, for descriptions of
	older changes see changes.txt.
